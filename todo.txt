TO DO :

1. Change the assignment operator, check copy swap idiom
http://stackoverflow.com/questions/3279543/what-is-the-copy-and-swap-idiom/3279550#3279550

2. See what can be done to change the * operator since right now it takes the vector by value and there is an error if that is changed to by const reference

3. In matrix.h many of the functions, especially the data access ones i.e. const Matrix<T> m, m[{1,2}] will not work, as the method doesn't exist !!!

4. In the vector class there is a problem with accessing the elements of the const Vector<T> v ,v[1] for instance will not work, so the methods (see the other 

    friend functions in the vector class) that should have const Vector<> do not work. Either just change the way that the vector is accessed in these functions

    or add an operator that can access const Vector<>

5. Need to change the inline laplace_op_2d function since it also depends on the dimension that we are looking at. In the first case while i==j takes the values -2, in dimension =1 it changes to 
i==j, value = -4 since -2 + -2 = -4 !!! Its important to change this !!!!

6. initial_sol_vec_2d(m) is the worst possible implementation, i should just input the size of the matrix i.e. m*m, it is easier to read the code then.

7. The use of iterators in matvec will help, I think, for now you are going over the value.
http://www.cplusplus.com/forum/general/8352/

8. LAPLACE OP is wrong
